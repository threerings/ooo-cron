<?xml version="1.0" standalone="yes"?>
<project name="ooo-cron" default="compile" basedir=".">
  <property name="src.dir" location="src/main/java"/>
  <property name="deploy.dir" location="target"/>
  <property name="classes.dir" location="${deploy.dir}/classes"/>
  <property name="jar.file" location="${deploy.dir}/${ant.project.name}.jar"/>

  <!-- bring in our standard build support -->
  <property name="ooo-build.vers" value="2.9"/>
  <ant antfile="etc/bootstrap.xml"/>
  <import file="${user.home}/.m2/ooo-build/${ooo-build.vers}/ooo-build.xml"/>

  <target name="prepare" depends="-init-ooo">
    <mkdir dir="${classes.dir}"/>
    <mavendep pom="pom.xml"/>
  </target>

  <target name="clean" description="Cleans out compilation results.">
    <delete dir="${deploy.dir}"/>
  </target>

  <target name="compile" depends="prepare" description="Builds the Java code.">
    <ooojavac srcdir="${src.dir}" destdir="${classes.dir}" version="1.5"
        classpathref="pom.xml.path"/>
  </target>

  <target name="package" depends="compile" description="Builds and jars the code.">
    <jar destfile="${jar.file}" basedir="${classes.dir}"/>
  </target>

  <target name="javadoc" depends="prepare" description="Builds the Java documentation">
    <mkdir dir="${deploy.dir}/docs"/>
    <javadoc sourcepath="${src.dir}" destdir="${deploy.dir}/docs"
             additionalparam="-breakiterator" classpathref="pom.xml.path">
      <link href="http://download.oracle.com/javase/6/docs/api/"/>
      <link href="http://docs.guava-libraries.googlecode.com/git/javadoc/"/>
      <link href="http://samskivert.github.com/samskivert/apidocs/"/>
      <link href="http://depot.googlecode.com/svn/apidocs/"/>
    </javadoc>
  </target>

  <target name="install" depends="package" description="Installs to local Maven repository.">
    <mavendeploy file="${jar.file}" pom="pom.xml"/>
  </target>

  <target name="deploy" depends="package,javadoc" description="Deploys to remote Maven repository.">
    <mavendeploy file="${jar.file}" pom="pom.xml" srcdir="${src.dir}" docdir="${deploy.dir}/docs"/>
  </target>
</project>
